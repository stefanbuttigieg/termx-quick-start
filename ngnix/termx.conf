server {
    server_name  termx.site.org;

    location / {
        #if ($http_origin ~* "^https?://(termx.taltech.ee|termx-sso.taltech.ee)$") {
        #  add_header Access-Control-Allow-Origin "$http_origin";
        #}
        #add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src *; frame-src *; style-src 'self' 'unsafe-inline'; connect-src termx-sso.taltech.ee termx.taltech.ee" always;
        proxy_pass http://localhost:4200/;
    }

    location /api/ {
        client_max_body_size 1500M;
        proxy_pass http://localhost:8200/;
        proxy_set_header Host $http_host/api;
        proxy_set_header X-Forwarded-Host $http_host/api;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /swagger {
        proxy_pass http://localhost:8000;
    }

    location /chef/ {
        client_max_body_size 100M;
        proxy_pass http://localhost:8500/;
    }

    location /plantuml {
        proxy_pass http://localhost:8501;
    }

    location /fml-editor/ {
        proxy_pass http://localhost:8502/;
    }

   location /minio-console/ {
        rewrite   ^/minio-console/(.*) /$1 break;
        proxy_pass http://localhost:9101;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-NginX-Proxy true;

        # This is necessary to pass the correct IP to be hashed
        real_ip_header X-Real-IP;

        proxy_connect_timeout 300;

        # To support websockets in MinIO versions released after January 2023
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        chunked_transfer_encoding off;
    }


    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }


    # add ssl certificate config here
    listen 443 ssl; # managed by Certbot
#    ssl_certificate /etc/letsencrypt/live/termx.taltech.ee/fullchain.pem; # managed by Certbot
#    ssl_certificate_key /etc/letsencrypt/live/termx.taltech.ee/privkey.pem; # managed by Certbot
#    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = termx.site.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name  termx.site.org;
    listen 80;
    return 404; # managed by Certbot

}

